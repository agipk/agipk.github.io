
@article{kharisma_paratransit_2021,
	title = {Paratransit {Trip} {Data} {Collection} {System} with {Smartphone} {GPS} and {REST} {Web} {Service} in {Malang}, {Indonesia}},
	volume = {9},
	issn = {2089-3272, 2089-3272},
	url = {http://section.iaesonline.com/index.php/IJEEI/article/view/2507},
	doi = {10.11591/ijeei.v9i1.2507},
	abstract = {Paratransit in Malang has its own irregular characteristics, same as in other cities in the world. It is tough to recognize the exact operational time, availability, and estimated travel time when using paratransit. The information about paratransit can be only obtained by making predictions due to its irregular characteristics. This research examined the importance of a system that can collect paratransit travel data as a basis for making predictions. Therefore, this research proposes the design of a paratransit travel data collection system by utilizing smartphone GPS and REST web service. To determine the position of the paratransit, the researchers used the concept of circle-based geofencing which is called pseudo-stop. The initial results obtained from the experiment indicated the influence of tracking intervals and radius of pseudo-stop on effectiveness and efficiency of the system. The shorter the tracking interval, the higher the tendency of the pseudo-stop radius value to decrease, resulting in decreased effectiveness and increased efficiency. Otherwise, the wider the tracking interval, the higher the tendency of the pseudo-stop radius value to be greater, resulting in increased effectiveness and decreased efficiency. In spite of periodically accessing location providers, the energy usage is quite low.},
	language = {en},
	number = {1},
	urldate = {2023-12-06},
	journal = {Indonesian Journal of Electrical Engineering and Informatics (IJEEI)},
	author = {Kharisma, Agi Putra and Jonemaro, Eriq Muhammad Adams and Arwani, Issa},
	month = mar,
	year = {2021},
	pages = {245--255},
	file = {Kharisma et al. - 2021 - Paratransit Trip Data Collection System with Smart.pdf:C\:\\Users\\agipu\\Zotero\\storage\\NRLVLTW6\\Kharisma et al. - 2021 - Paratransit Trip Data Collection System with Smart.pdf:application/pdf},
}

@inproceedings{kharisma_towards_2021,
	address = {New York, NY, USA},
	series = {{SIET} '20},
	title = {Towards {Text}-{Based} {Domain}-{Specific} {Modeling} {Language} for {Representational} {State} {Transfer} {Compliant} {Services}},
	isbn = {978-1-4503-7605-1},
	url = {https://doi.org/10.1145/3427423.3427454},
	doi = {10.1145/3427423.3427454},
	abstract = {This paper discusses the development of text-based domain-specific modeling language. The covered domain is representational state transfer (REST) architectural style. With domain-specific modeling language, we can develop software in a higher level of abstraction than general-purpose programming language. Domain analysis is performed to classify different kinds of resources into several resource types, namely resource, individual resource, projection resource, container resource, list resource, collection resource, transitional resource, and subresource. The design of modeling language is represented in metamodel and the implementation of modeling language is represented in EBNF-like grammar using Xtext domain-specific language (DSL) framework. In conclusion, we have successfully developed a domain-specific modeling language and its validators. The problem faced lies in the code generator in the behavioral modeling aspect, especially the business logic. It is very difficult to generalize the various business logic at a high level of abstraction. So that in the future, the modeling language needs to be limited to a narrower domain so that it can be fully executable.},
	booktitle = {Proceedings of the 5th {International} {Conference} on {Sustainable} {Information} {Engineering} and {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Kharisma, Agi Putra and Mardiyanto, Mochamad Sukrisno},
	year = {2021},
	note = {event-place: Malang, Indonesia},
	keywords = {code generator, domain-specific modeling language, representational state transfer},
	pages = {74--78},
}

@article{kharisma_prototype_2019,
	title = {Prototype of {REST} {Location}-based {Service} for {Trip} {Planning} by {Paratransit} ({Mikrolet}) in {Malang} {City}},
	volume = {4},
	url = {https://jitecs.ub.ac.id/index.php/jitecs/article/view/131},
	doi = {10.25126/jitecs.201943131},
	number = {3},
	journal = {Journal of Information Technology and Computer Science},
	author = {Kharisma, Agi Putra and Pinandito, Aryo},
	month = dec,
	year = {2019},
	pages = {253--266},
}

@inproceedings{bihanda_nusantarian_2023,
	address = {New York, NY, USA},
	series = {{SIET} '22},
	title = {Nusantarian: {Development} of {Gamification}-{Based} {Badut} {Temple} {Educational} {Tourism} {Applications} on {Android}},
	isbn = {978-1-4503-9711-7},
	url = {https://doi.org/10.1145/3568231.3568284},
	doi = {10.1145/3568231.3568284},
	abstract = {Badut Temple as one of the tourist destinations in Malang and the oldest temple in East Java has a problem in the form of the existence of an information board that only explains some of the objects in the Badut Temple. Whereas the results of observations show that temple visitors have a curiosity about existing objects and tend to explore the meaning of the objects themselves rather than reading the existing information boards. A solution is needed to convey the information contained in the Badut Temple object by combining the gamification method. The development of the Nusantarian application uses the waterfall software development method by using tests in the form of functional testing, usability, and compatibility. The choice of the waterfall method is because the functional requirements of the system have been clearly defined from the start. The results of functional testing show that almost all functional requirements can run well except for functional requirements that utilize GPS sensors because the accuracy of mobile GPS is sometimes inaccurate and precise. While the application compatibility test can run well at least on the Android Pie version. And the usability test got a success rate of 96.67\% and based on the System Usability Scale (SUS) it produced an average value of 76 which was in adjective good or acceptable. Based on distance analysis, The average respondent found objects within 2 â€“ 4 meters past or before the location of the original object. Also, the most frequent objects encountered by respondents were Perwara Temple and the Nandi statue. It is hoped that this research can be developed with a combination of other methods that can improve the weaknesses of the use of GPS sensors.},
	booktitle = {Proceedings of the 7th {International} {Conference} on {Sustainable} {Information} {Engineering} and {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Bihanda, Yusuf Gladiensyah and Kharisma, Agi Putra and Ananta, Mahardeka Tri},
	year = {2023},
	note = {event-place: Malang, Indonesia},
	pages = {320--324},
}

@article{nuruzzaman_pengembangan_2022,
	title = {{PENGEMBANGAN} {APLIKASI} {PELAYANAN} {ANTRIAN} {RUMAH} {SAKIT} {GATOEL} {MOJOKERTO} {BERBASIS} {ANDROID}},
	volume = {6},
	issn = {2722-2713, 2549-0710},
	url = {http://jurnal.umt.ac.id/index.php/jika/article/view/6220},
	doi = {10.31000/jika.v6i2.6220},
	abstract = {Health services are one of the important factors for hospitals. Good and bad services provided will affect the image of the hospital itself. Increased activity in a hospital with limited service facilities will result in queues at the outpatient unit. This happened in Gatoel Mojokerto Hospital. Based on survey that has been conducted, there are 80\% of hospital visitors who experience a long queue when registering conventionally and 56\% have difficulty receiving information on the doctor's practice schedule. Thus, 94\% of patients require an online registration application. The purpose of this study is to make an online registration application to solve patient problems. This research uses waterfall method. In requirement analysis there are 11 functional and 2 non-functional requirements. At the design step, includes the design of use case diagrams, use case scenarios, activity diagrams, sequence diagrams, pseudocode, class diagrams, databases, and interfaces. Then at the implementation step, it produces a database implementation and 12 interface. In the testing step, it is 100\% valid on black-box and compatibility. The usability test using SUS resulted in a score of 100 for the admin which was classified as grade A with best imaginable adjective ratings and a score of 88.12 for patients who were classified as grade B with adjective ratings excellent.},
	language = {id},
	number = {2},
	urldate = {2023-12-07},
	journal = {JIKA (Jurnal Informatika)},
	author = {Nuruzzaman, Zam Zam and Kharisma, Agi Putra and Ananta, Mahardeka Tri},
	month = jun,
	year = {2022},
	pages = {187},
	file = {Nuruzzaman et al. - 2022 - PENGEMBANGAN APLIKASI PELAYANAN ANTRIAN RUMAH SAKI.pdf:C\:\\Users\\agipu\\Zotero\\storage\\V4W9VPXR\\Nuruzzaman et al. - 2022 - PENGEMBANGAN APLIKASI PELAYANAN ANTRIAN RUMAH SAKI.pdf:application/pdf},
}

@article{dewi_topsis_2021,
	title = {{TOPSIS} for mobile based group and personal decision support system},
	volume = {7},
	url = {https://journal.unipdu.ac.id/index.php/register/article/view/2140},
	doi = {10.26594/register.v7i1.2140},
	number = {1},
	journal = {Register},
	author = {Dewi, Ratih Kartika and Jonemaro, Eriq Muhammad Adams and Kharisma, Agi Putra and Farah, Najla Alia and Dewantoro, Mury Fajar},
	month = feb,
	year = {2021},
	pages = {43--49},
}

@article{pinandito_framework_2018,
	title = {Framework {Design} for {Map}-{Based} {Navigation} in {Google} {Android} {Platform}},
	volume = {10},
	url = {https://jtec.utem.edu.my/jtec/article/view/3731},
	number = {1-8},
	journal = {Journal of Telecommunication, Electronic and Computer Engineering (JTEC)},
	author = {Pinandito, Aryo and Kharisma, Agi Putra and Perdana, Rizal Setya},
	month = feb,
	year = {2018},
	pages = {35--40},
}

@article{kharisma_design_2017,
	title = {Design of {REST} {API} for {Local} {Public} {Transportation} {Information} {Services} in {Malang} {City}},
	volume = {2},
	url = {https://jitecs.ub.ac.id/index.php/jitecs/article/view/26},
	doi = {10.25126/jitecs.20172226},
	number = {2},
	journal = {Journal of Information Technology and Computer Science},
	author = {Kharisma, Agi Putra and Pinandito, Aryo},
	month = nov,
	year = {2017},
}

@inproceedings{az-zahra_evaluating_2019,
	title = {Evaluating {E}-marketplace {Mobile} {Application} {Based} on {People} {At} the {Center} of {Mobile} {Application} {Development} ({PACMAD}) {Usability} {Model}},
	doi = {10.1109/SIET48054.2019.8986067},
	booktitle = {2019 {International} {Conference} on {Sustainable} {Information} {Engineering} and {Technology} ({SIET})},
	author = {Az-zahra, Hanifah Muslimah and Fauzi, Nafilah and Kharisma, Agi Putra},
	year = {2019},
	pages = {72--77},
}

@article{pinandito_architectural_2023,
	title = {Architectural {Design} of {Representational} {State} {Transfer} {Application} {Programming} {Interface} with {Application}-{Level} {Base64}-{Encoding} and {Zlib} {Data} {Compression}},
	volume = {8},
	abstract = {Representational State Transfer (REST) is an architectural style that underlies the protocol of HyperText Transfer Protocol (HTTP) and is used by web applications. The implementation of REST principles in web services is often known as RESTful API. The standard communication used in RESTful APIs uses HTTP without involving data compression. There are quite a lot of RESTful API clients in the form of mobile applications that use metered networks. Thus, reducing the required bandwidth during transmission is suggested to be beneficial. The data compression technique is widely known to reduce data size, but this additional step may yield side effects such as increased memory usage and processing time. This study aims to investigate how the data compression process, which specifically uses Zlib and Base64 encoding, may put additional load on the whole process of delivering content to a RESTful API. The performance and characteristics in terms of bandwidth saved when distributing JSON data from a RESTful API in compressed format are also be investigated. According to the experiment result, it is suggested that the compression process can reduce network bandwidth by up to 66\% with negligible additional memory usage for the compression and decompression processes.},
	language = {en},
	number = {3},
	author = {Pinandito, Aryo and Kharisma, Agi Putra and Jonemaro, Eriq Muhammad Adams},
	year = {2023},
	file = {Pinandito et al. - 2023 - Architectural Design of Representational State Tra.pdf:C\:\\Users\\agipu\\Zotero\\storage\\X32RASGQ\\Pinandito et al. - 2023 - Architectural Design of Representational State Tra.pdf:application/pdf},
}

@inproceedings{pinandito_improving_2023,
	address = {New York, NY, USA},
	series = {{SIET} '23},
	title = {Improving {Route}-{Finding} {Performance} of {Dijkstra} {Algorithm} and {Maintaining} {Path} {Visual} {Cue} {Using} {Douglas}-{Peucker} {Algorithm}},
	isbn = {9798400708503},
	url = {https://doi.org/10.1145/3626641.3626941},
	doi = {10.1145/3626641.3626941},
	abstract = {Smartphones and their mobile applications have become an inseparable part of modern daily life. One of them is a public transportation app that helps people commute with public transportation. Many public transportation service providers have mobile applications as a companion for their customers to improve their quality of service. The application provides useful information and/or important features regarding their service, such as timetables or route finding for public transit. Such features run a slow algorithm to provide real-time or time-based information to the users. Dijkstra is one example of an algorithm that allows users to find the shortest path from one location to another in a public transit network. However, Dijkstra is categorized as a greedy algorithm because it looks at all possible solutions. It takes longer for Dijkstra to find the optimum solution when the number of points in a network graph is high. This study attempted to improve the overall route-finding processing time and reduce the memory footprint while keeping the visual cue of a route path reasonably consistent by utilizing Douglas-Peucker line simplification algorithm to simplify the path and reduce the number of points that Dijkstra algorithm processes. The result suggested that Douglas-Peucker simplification process took 0.5\% additional memory footprint and put 5.13\% additional processing time into the overall route-finding processing time. However, it reduces the overall memory footprint and processing time by 72.56\% and 80.83\%, respectively. The result conveyed a significant improvement in the practical implementation of Douglas-Peucker algorithm to reduce the input for the Dijkstra algorithm in finding the optimal route, thereby improving the overall route-finding performance.},
	booktitle = {Proceedings of the 8th {International} {Conference} on {Sustainable} {Information} {Engineering} and {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Pinandito, Aryo and Kharisma, Agi Putra and Akbar, Muhammad Aminul},
	year = {2023},
	note = {event-place: {\textless}conf-loc{\textgreater}, {\textless}city{\textgreater}Badung, Bali{\textless}/city{\textgreater}, {\textless}country{\textgreater}Indonesia{\textless}/country{\textgreater}, {\textless}/conf-loc{\textgreater}},
	keywords = {Dijkstra, Douglas-Peucker, path, route, simplification, transportation},
}
